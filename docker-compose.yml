# generating ssl certs
# sudo openssl dhparam -out dhparam-2048.pem 2048
# docker-compose up --force-recreate --no-deps certbot, after adding A records to point to the correct ip address
version: '3.7'

services:
  main:
    image: "node:14.15.1-alpine3.12"
    container_name: main
    build:
      context: .
      dockerfile: Dockerfile.prod
      # target: production
    user: "node"
    working_dir: /usr/src/app
    environment:
      - NODE_ENV=production
      - VERSION=1.0
    # volumes are only required for live reloading and binding local directories
    # volumes:
    #   - /usr/src/app
    #   - /usr/app/node_modules
    # ports:
    #   - "80:3000"
    tty: true
    command: "yarn start"
    env_file:
      - .env
    networks:
      - webnet
    restart: always

  # minio:
  #   image: 'bitnami/minio:latest'
  #   ports:
  #     - '9000:9000'
  #   environment:
  #     - MINIO_ACCESS_KEY=shanur
  #     - MINIO_SECRET_KEY=shanurrahman123
  #   networks:
  #     - webnet

  mongodb:
    image: 'docker.io/bitnami/mongodb:4.4-debian-10'
    ports:
      - "27017:27017"
    volumes:
      - 'mongodb_data:/bitnami/mongodb'
    networks:
      - webnet
  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PASSWORD=password123
      - REDIS_USER=shanur
    command: /opt/bitnami/scripts/redis/run.sh --maxmemory 100mb
    ports: 
      - "6379:6379"
    networks:
      - webnet
  
  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/lib/letsencrypt
  #     - web-root:/var/www/html
  #   depends_on:
  #     - webserver
  #   command: certonly --webroot --webroot-path=/var/www/html --email shanur.cse.nitap@gmail.com --agree-tos --no-eff-email --staging -d moleculesystem.com  -d www.moleculesystem.com

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
    #   - certbot-etc:/etc/letsencrypt
    #   - certbot-var:/var/lib/letsencrypt
    #   - dhparam:/etc/ssl/certs
    # command: ls -sail /etc/letsencrypt/live
    depends_on:
      - main
    networks:
      - webnet

networks:
  webnet:
volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/ec2-user/crm-api/client
      o: bind
  # dhparam:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     device: /home/ec2-user/crm-api/dhparam
  #     o: bind
  pgdata:
  mongodb_data:
    driver: local
