apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o kube -c
    kompose.version: 1.22.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: webserver
  name: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: webserver
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kube -c
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/webnet: "true"
        io.kompose.service: webserver
    spec:
      containers:
        - env:
            - name: CERTBOT_EMAIL
              value: shanur.cse.nitap@gmail.com
            - name: ENVSUBST_VARS
              value: FQDN
            - name: FQDN
              value: moleculesystem.com
          image: staticfloat/nginx-certbot
          name: webserver
          ports:
            - containerPort: 80
            - containerPort: 443
          resources: {}
          volumeMounts:
            - mountPath: /etc/nginx/user.conf.d
              name: webserver-claim0
              readOnly: true
            - mountPath: /etc/letsencrypt
              name: letsencrypt
            - mountPath: /usr/share/nginx/html
              name: webserver-claim2
      restartPolicy: Always
      volumes:
        - name: webserver-claim0
          persistentVolumeClaim:
            claimName: webserver-claim0
            readOnly: true
        - name: letsencrypt
          persistentVolumeClaim:
            claimName: letsencrypt
        - name: webserver-claim2
          persistentVolumeClaim:
            claimName: webserver-claim2
status: {}
